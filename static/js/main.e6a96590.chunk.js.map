{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAE1B,OAEA,wBACCA,QAASA,EACTC,MAAO,CAACC,gBAAgBJ,GACzBK,UAAU,MAHV,SAIaJ,KAMjBF,EAAOO,aAAe,CAClBN,MAAO,SACPC,KAAM,eASKF,QCvBTQ,EAAS,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAQC,EAAa,EAAbA,QAE5B,OACI,yBAAQL,UAAU,SAAlB,UACA,6BAAKG,IACL,cAAC,EAAD,CACAR,MAAOU,EAAU,MAAQ,QAAST,KAAMS,EAAU,QAAU,MAAOR,QAAWO,QAItFF,EAAOD,aAAe,CAClBE,MAAM,gBAOKD,Q,OCVAI,EAXF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKT,UAAS,eAAUO,EAAKG,SAAW,WAAa,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA9F,UACI,+BAAKL,EAAKX,KAAV,IAAgB,cAAC,IAAD,CAASE,MAAS,CAACH,MAAM,MACzCkB,OAAO,WACNhB,QAAW,kBAAMW,EAASD,EAAKK,UAChC,4BAAIL,EAAKO,UCMNC,EAZD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE7B,OACI,mCACKO,EAAMC,KAAI,SAACV,GAAD,OACX,cAAC,EAAD,CAAqBA,KAAMA,EAAMC,SAAYA,EAC7CC,SAAYA,GADAF,EAAKK,UCwCdM,EA5CC,SAAC,GAAgB,IAAbd,EAAY,EAAZA,MAChB,EAAuBe,mBAAS,IAAhC,mBAAMvB,EAAN,KAAYwB,EAAZ,KACA,EAAqBD,mBAAS,IAA9B,mBAAML,EAAN,KAAWO,EAAX,KACA,EAA+BF,oBAAS,GAAxC,mBAAMT,EAAN,KAAgBY,EAAhB,KAeA,OACI,uBAAMtB,UAAU,WAAWuB,SAdlB,SAACC,GACdA,EAAEC,iBACE7B,GAIJQ,EAAM,CAACR,OAAMkB,MAAKJ,aAElBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IAPRI,MAAM,sBAWN,UACI,sBAAK1B,UAAU,eAAf,UACI,yCACA,uBAAO2B,KAAK,OAAOC,YAAY,WAAWC,MAAOjC,EAAMkC,SAAU,SAACN,GAAD,OACjEJ,EAAQI,EAAEO,OAAOF,aAGrB,sBAAK7B,UAAU,eAAf,UACI,+CACA,uBAAO2B,KAAK,OAAOC,YAAY,iBAAiBC,MAAOf,EAAKgB,SAAU,SAACN,GAAD,OACtEH,EAAOG,EAAEO,OAAOF,aAGpB,sBAAK7B,UAAU,kCAAf,UACI,iDACA,uBAAO2B,KAAK,WACZK,QAAStB,EAAUmB,MAAOnB,EAAUoB,SAAU,SAACN,GAAD,OAC9CF,EAAYE,EAAES,cAAcD,eAGhC,uBAAOL,KAAK,SAASE,MAAM,YAAY7B,UAAU,sBCuB9CkC,MA1Df,WACE,MAAsCf,oBAAU,GAAhD,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA0BjB,mBAAS,CACjC,CACIP,GAAI,EACJhB,KAAM,sBACNkB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJhB,KAAM,oBACNkB,IAAK,oBACLJ,UAAU,GAEd,CACIE,GAAI,EACJhB,KAAM,uBACNkB,IAAK,oBACLJ,UAAU,KAjBhB,mBAAOM,EAAP,KAAcqB,EAAd,KA0CA,OAEE,sBAAKrC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,MAAO,kBAAKgC,GAAgBD,IAAc9B,QAAW8B,IAC5DA,EAAc,cAAC,EAAD,CAAS/B,MAtBd,SAACG,GACf,IAAMK,EAAK0B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,EACxCC,EAAO,aAAI7B,MAAML,GACvB8B,EAAS,GAAD,mBAAKrB,GAAL,CAAWyB,QAmB4B,GAC1CzB,EAAM0B,OAAS,EAChB,cAAC,EAAD,CAAO1B,MAASA,EAAOR,SAhBV,SAACI,GAClByB,EAASrB,EAAM2B,QAAO,SAACpC,GAAD,OAASA,EAAKK,KAAOA,OAgB1BH,SAZI,SAACG,GACtByB,EAASrB,EAAMC,KAAI,SAACV,GAAD,OAASA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UAAWH,EAAKG,WAAYH,SAlBpE,sBChBFqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAI1Bb,M","file":"static/js/main.e6a96590.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n   \n    return (\n  \n    <button \n     onClick={onClick} \n     style={{backgroundColor:color}} \n    className='btn'>\n                {text}\n            </button>\n\n    )\n}\n\nButton.defaultProps = {\n    color: 'yellow',\n    text: 'Placeholder',\n}\n\nButton.propTypes = {\n text: PropTypes.string,\n color: PropTypes.string,\n onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n\nconst Header = ({title, onAdd , showAdd}) => {\n   \n    return (\n        <header className='header'>\n        <h1>{title}</h1>\n        <Button \n        color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd}/>\n        </header>\n    )\n}\nHeader.defaultProps = {\n    title:'Task tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style = {{color:'red', \n            cursor:'pointer',}}\n             onClick = {() => onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n   \n    return (\n        <>\n            {tasks.map((task) => (\n            <Task key= {task.id} task={task} onDelete = {onDelete}\n            onToggle = {onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ( { onAdd }) => {\n    const[text, setText] = useState('')\n    const[day, setDay] = useState('')\n    const[reminder, setReminder] = useState(false)\n\nconst onSubmit = (e) => {\n    e.preventDefault()\n    if(!text) {\n        alert('Please add a task')\n        return\n    }\n    onAdd({text, day, reminder})\n\n    setText('')\n    setDay('')\n    setReminder(false)\n}\n\n    return (\n        <form className='add-form' onSubmit = {onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e)=>\n                setText(e.target.value)} />\n            </div>\n\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day & Time' value={day} onChange={(e)=>\n                setDay(e.target.value)} />\n            </div>\n\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox'\n                checked={reminder} value={reminder} onChange={(e)=>\n                setReminder(e.currentTarget.checked)} />\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n        </form>\n    )\n                }\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState (false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Jakes Appointment',\n        day: 'Feb 3th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Freddies Appointment',\n        day: 'Feb 5th at 4:30pm',\n        reminder: false,\n    },\n])\nconst emptyTxt = 'No Task To Show'\n\n// Add Task\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000) + 1\n  const newTask = {id,...task}\n  setTasks([...tasks,newTask])\n}\n\n\n// Delete Task\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task)=> task.id !== id))\n}\n\n// Remind task\nconst toggleReminder = (id) =>{\n  setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: !task.reminder} : task))\n}\n\n\n  return (\n\n    <div className='container'>\n      <Header onAdd={()=> setShowAddTask(!showAddTask)} showAdd = {showAddTask}/>\n      {showAddTask ? <AddTask onAdd={addTask}/> :''}\n      {tasks.length > 0 ?\n      <Tasks tasks = {tasks} onDelete=\n      {deleteTask} onToggle = {toggleReminder} /> \n      : (emptyTxt)}\n    </div>\n  \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}